{"version":3,"sources":["components/Filter.js","components/ContactForm.js","components/Contacts.js","services/contacts.js","components/Notification.js","App.js","index.js"],"names":["Filter","setNewFilter","onChange","event","target","value","ContactForm","newName","newNumber","setNewName","setNewNumber","addContact","onSubmit","type","Contacts","filteredContacts","deleteContact","map","contact","key","name","number","style","marginLeft","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","notification","notifStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","message","App","useState","contacts","setContacts","newFilter","setNotification","useEffect","contactService","initialContacts","filter","toLowerCase","includes","showAndClearNotification","setTimeout","preventDefault","contactObject","trim","contactToUpdate","find","c","window","confirm","length","updatedContact","returnedContact","catch","error","concat","console","log","contactToDel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22b6c857.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ setNewFilter }) => {\n    const handleFilterChange = (event) => {\n        setNewFilter(event.target.value)\n    }\n\n    return (\n        <form>\n            <div>\n                filter by name: <input onChange={handleFilterChange} />\n            </div>\n        </form>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst ContactForm = ({ newName, newNumber, setNewName, setNewNumber, addContact }) => {\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    return (\n        <form onSubmit={addContact}>\n            <div>\n                name: <input value={newName} onChange={handleNameChange} />\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\n\nexport default ContactForm","import React from 'react'\n\nconst Contacts = ({ filteredContacts, deleteContact }) => (\n    <div>\n        {filteredContacts.map(contact =>\n            <div key={contact.name}>\n                {contact.name} {contact.number}\n                <button style={{ marginLeft: 5 }} onClick={() => deleteContact(contact.id)}>delete</button>\n            </div>\n        )}\n    </div>\n)\n\nexport default Contacts","import axios from 'axios'\nconst baseUrl = '/api/contacts'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst del = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\n\nexport default { getAll, create, update, del }","import React from 'react'\n\nconst Notification = ({ notification }) => {\n\n    const notifStyle = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px',\n    }\n\n    if (notification.type === 'error') {\n        notifStyle.color = 'red'\n    }\n\n    if (notification.message === null || notification.type === null) {\n        return null\n    }\n\n    return (\n        <div style={notifStyle}>\n            {notification.message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport ContactForm from './components/ContactForm'\nimport Contacts from './components/Contacts'\nimport contactService from './services/contacts'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [contacts, setContacts] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [notification, setNotification] = useState({ message: null, type: null })\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(initialContacts => {\n        setContacts(initialContacts)\n      })\n  }, [])\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  const showAndClearNotification = (message, type) => {\n    setNotification(\n      {\n        message: message,\n        type: type\n      }\n    )\n    setTimeout(() => {\n      setNotification({ message: null, type: null })\n    }, 5000)\n  }\n\n  const addContact = (event) => {\n    event.preventDefault()\n    const contactObject = {\n      name: newName.trim(),\n      number: newNumber.trim()\n    }\n    const contactToUpdate = contacts.find(c => c.name === newName)\n    if (contactToUpdate) {\n      if (window.confirm(\n        `'${newName}' is already added to phonebook, replace the old number with a new one?`)) {\n        if (newNumber.length > 7) {\n          const updatedContact = { ...contactToUpdate, number: newNumber }\n          contactService\n            .update(contactToUpdate.id, updatedContact)\n            .then(returnedContact => {\n              setContacts(contacts.map(c => c.id !== contactToUpdate.id ? c : returnedContact))\n              setNewName('')\n              setNewNumber('')\n              showAndClearNotification(`${returnedContact.name}'s phone number updated`,\n                'success')\n            })\n            .catch(error => {\n              setContacts(contacts.filter(c => c.id !== contactToUpdate.id))\n              showAndClearNotification(`Contact information of '${contactToUpdate.name}' \n            has already been removed from server. ${error}`, 'error')\n            })\n        } else {\n          showAndClearNotification(`Validation failed. ${newName}'s phone number \n          must be at least 8 characters in length.`, 'error')\n        }\n      }\n    } else if (contactObject.name.length > 2 && contactObject.number.length > 7) {\n        contactService\n          .create(contactObject)\n          .then(returnedContact => {\n            setContacts(contacts.concat(returnedContact))\n            setNewName('')\n            setNewNumber('')\n            showAndClearNotification(`'${returnedContact.name}' added`, 'success')\n          })\n          .catch(error => {\n            showAndClearNotification(`Contact information is not added. ${error}`, 'error')\n            console.log(error.response.data)\n          })\n      } else if (contactObject.name.length < 3) {\n        showAndClearNotification(`Validation failed. Contact name must be \n        at least 3 characters in length.`, 'error')\n      } else if (contactObject.name.length > 2 && contactObject.number.length < 8) {\n        showAndClearNotification(`Validation failed. ${contactObject.name}'s phone number \n        must be at least 8 characters in length.`, 'error')\n      }\n  }\n\n\n  const deleteContact = id => {\n    let contactToDel = contacts.find(c => c.id === id)\n    if (window.confirm(`Delete '${contactToDel.name}'?`)) {\n      contactService\n        .del(id)\n        .then(() => {\n          setContacts(contacts.filter(c => c.id !== id))\n          showAndClearNotification(`'${contactToDel.name}' deleted`, 'success')\n        })\n        .catch(error => {\n          setContacts(contacts.filter(c => c.id !== contactToDel.id))\n          showAndClearNotification(`Contact not found. ${error}`, 'error')\n        })\n    }\n  }\n\n\n  return (\n    <div>\n      <Notification notification={notification} />\n\n      <h2>Phonebook</h2>\n\n      <Filter setNewFilter={setNewFilter} />\n\n      <h2>Add a contact</h2>\n\n      <ContactForm newName={newName}\n        newNumber={newNumber}\n        setNewName={setNewName}\n        setNewNumber={setNewNumber}\n        addContact={addContact}\n      />\n\n      <h2>Contacts</h2>\n\n      <Contacts filteredContacts={filteredContacts} deleteContact={deleteContact} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}